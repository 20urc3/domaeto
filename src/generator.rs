use std::collections::HashMap;
use phf::phf_map;

// from grammar import Grammar
// from svg_tags import _SVG_TYPES
// from html_tags import _HTML_TYPES
// from mathml_tags import _MATHML_TYPES

fn generate_html_elements(ctx, n)

/*
    for i in range(n):
        tag = random.choice(list(_HTML_TYPES))
        tagtype = _HTML_TYPES[tag]
        ctx['htmlvarctr'] += 1
        varname = 'htmlvar%05d' % ctx['htmlvarctr']
        ctx['htmlvars'].append({'name': varname, 'type': tagtype})
        ctx['htmlvargen'] += '/* newvar{' + varname + ':' + tagtype + '} */ var ' + varname + ' = document.createElement(\"' + tag + '\"); //' + tagtype + '\n'

*/

// fn add_html_ids(matchobj, ctx)
// fn generate_function_body(jsgrammar, htmlctx, num_lines)
//fn check_grammar(grammar)
// fn generate_new_sample(template, htmlgrammar, cssgrammar, jsgrammar)
// fn generate_samples(template, outfiles)
// fn get_argument_parser()



static HtmlTypes: phf::Map<&'static str, &'static str> = phf_map! {
    "a" => "HTMLAnchorElement",
    "abbr" => "HTMLUnknownElement",
    "acronym" => "HTMLUnknownElement",
    "address" => "HTMLUnknownElement",
    "applet" => "HTMLUnknownElement",
    "area" => "HTMLAreaElement",
    "article" => "HTMLUnknownElement",
    "aside" => "HTMLUnknownElement",
    "audio" => "HTMLAudioElement",
    "b" => "HTMLUnknownElement",
    "base" => "HTMLBaseElement",
    "basefont" => "HTMLUnknownElement",
    "bdi" => "HTMLUnknownElement",
    "bdo" => "HTMLUnknownElement",
    "bgsound" => "HTMLUnknownElement",
    "big" => "HTMLUnknownElement",
    "blockquote" => "HTMLUnknownElement",
    "br" => "HTMLBRElement",
    "button" => "HTMLButtonElement",
    "canvas" => "HTMLCanvasElement",
    "caption" => "HTMLTableCaptionElement",
    "center" => "HTMLUnknownElement",
    "cite" => "HTMLUnknownElement",
    "code" => "HTMLUnknownElement",
    "col" => "HTMLTableColElement",
    "colgroup" => "HTMLUnknownElement",
    "command" => "HTMLUnknownElement",
    "content" => "HTMLContentElement",
    "data" => "HTMLDataElement",
    "datalist" => "HTMLDataListElement",
    "dd" => "HTMLUnknownElement",
    "del" => "HTMLModElement",
    "details" => "HTMLDetailsElement",
    "dfn" => "HTMLUnknownElement",
    "dialog" => "HTMLDialogElement",
    "dir" => "HTMLDirectoryElement",
    "div" => "HTMLDivElement",
    "dl" => "HTMLDListElement",
    "dt" => "HTMLUnknownElement",
    "em" => "HTMLUnknownElement",
    "embed" => "HTMLEmbedElement",
    "fieldset" => "HTMLFieldSetElement",
    "figcaption" => "HTMLUnknownElement",
    "figure" => "HTMLUnknownElement",
    "font" => "HTMLFontElement",
    "footer" => "HTMLUnknownElement",
    "form" => "HTMLFormElement",
    "frame" => "HTMLFrameElement",
    "frameset" => "HTMLFrameSetElement",
    "h1" => "HTMLHeadingElement",
    "h2" => "HTMLHeadingElement",
    "h3" => "HTMLHeadingElement",
    "h4" => "HTMLHeadingElement",
    "h5" => "HTMLHeadingElement",
    "h6" => "HTMLHeadingElement",
    "header" => "HTMLUnknownElement",
    "hgroup" => "HTMLUnknownElement",
    "hr" => "HTMLHRElement",
    "i" => "HTMLUnknownElement",
    "iframe" => "HTMLIFrameElement",
    "image" => "HTMLImageElement",
    "img" => "HTMLImageElement",
    "input" => "HTMLInputElement",
    "ins" => "HTMLModElement",
    "isindex" => "HTMLUnknownElement",
    "kbd" => "HTMLUnknownElement",
    "keygen" => "HTMLKeygenElement",
    "label" => "HTMLLabelElement",
    "layer" => "HTMLUnknownElement",
    "legend" => "HTMLLegendElement",
    "li" => "HTMLLIElement",
    "link" => "HTMLLinkElement",
    "listing" => "HTMLUnknownElement",
    "main" => "HTMLUnknownElement",
    "map" => "HTMLMapElement",
    "mark" => "HTMLUnknownElement",
    "marquee" => "HTMLMarqueeElement",
    "menu" => "HTMLMenuElement",
    "menuitem" => "HTMLMenuItemElement",
    "meta" => "HTMLMetaElement",
    "meter" => "HTMLMeterElement",
    "nav" => "HTMLUnknownElement",
    "nobr" => "HTMLUnknownElement",
    "noembed" => "HTMLUnknownElement",
    "noframes" => "HTMLUnknownElement",
    "nolayer" => "HTMLUnknownElement",
    "noscript" => "HTMLUnknownElement",
    "object" => "HTMLObjectElement",
    "ol" => "HTMLOListElement",
    "optgroup" => "HTMLOptGroupElement",
    "option" => "HTMLOptionElement",
    "output" => "HTMLOutputElement",
    "p" => "HTMLParagraphElement",
    "param" => "HTMLParamElement",
    "picture" => "HTMLPictureElement",
    "plaintext" => "HTMLUnknownElement",
    "pre" => "HTMLPreElement",
    "progress" => "HTMLProgressElement",
    "q" => "HTMLQuoteElement",
    "rp" => "HTMLUnknownElement",
    "rt" => "HTMLUnknownElement",
    "ruby" => "HTMLUnknownElement",
    "s" => "HTMLUnknownElement",
    "samp" => "HTMLUnknownElement",
    "section" => "HTMLUnknownElement",
    "select" => "HTMLSelectElement",
    "shadow" => "HTMLShadowElement",
    "small" => "HTMLUnknownElement",
    "source" => "HTMLSourceElement",
    "span" => "HTMLSpanElement",
    "strike" => "HTMLUnknownElement",
    "strong" => "HTMLUnknownElement",
    "style" => "HTMLStyleElement",
    "sub" => "HTMLUnknownElement",
    "summary" => "HTMLUnknownElement",
    "sup" => "HTMLUnknownElement",
    "table" => "HTMLTableElement",
    "tbody" => "HTMLTableSectionElement",
    "td" => "HTMLUnknownElement",
    "template" => "HTMLTemplateElement",
    "textarea" => "HTMLTextAreaElement",
    "tfoot" => "HTMLTableSectionElement",
    "th" => "HTMLTableCellElement",
    "thead" => "HTMLTableSectionElement",
    "time" => "HTMLTimeElement",
    "title" => "HTMLTitleElement",
    "tr" => "HTMLTableRowElement",
    "track" => "HTMLTrackElement",
    "tt" => "HTMLUnknownElement",
    "u" => "HTMLUnknownElement",
    "ul" => "HTMLUListElement",
    "var" => "HTMLUnknownElement",
    "video" => "HTMLVideoElement",
    "wbr" => "HTMLUnknownElement",
    "xmp" => "HTMLUnknownElement"
};

static SvgTypes: phf::Map<&'static str, &'static str> = phf_map! {
    "a" => "SVGAElement",
    "altGlyph" => "SVGElement",
    "altGlyphDef" => "SVGElement",
    "altGlyphItem" => "SVGElement",
    "animate" => "SVGAnimateElement",
    "animateColor" => "SVGElement",
    "animateMotion" => "SVGAnimateMotionElement",
    "animateTransform" => "SVGAnimateTransformElement",
    "circle" => "SVGCircleElement",
    "clipPath" => "SVGClipPathElement",
    "color-profile" => "SVGElement",
    "cursor" => "SVGCursorElement",
    "defs" => "SVGDefsElement",
    "desc" => "SVGDescElement",
    "discard" => "SVGDiscardElement",
    "ellipse" => "SVGEllipseElement",
    "feBlend" => "SVGFEBlendElement",
    "feColorMatrix" => "SVGFEColorMatrixElement",
    "feComponentTransfer" => "SVGFEComponentTransferElement",
    "feComposite" => "SVGFECompositeElement",
    "feConvolveMatrix" => "SVGFEConvolveMatrixElement",
    "feDiffuseLighting" => "SVGFEDiffuseLightingElement",
    "feDisplacementMap" => "SVGFEDisplacementMapElement",
    "feDistantLight" => "SVGFEDistantLightElement",
    "feDropShadow" => "SVGFEDropShadowElement",
    "feFlood" => "SVGFEFloodElement",
    "feFuncA" => "SVGFEFuncAElement",
    "feFuncB" => "SVGFEFuncBElement",
    "feFuncG" => "SVGFEFuncGElement",
    "feFuncR" => "SVGFEFuncRElement",
    "feGaussianBlur" => "SVGFEGaussianBlurElement",
    "feImage" => "SVGFEImageElement",
    "feMerge" => "SVGFEMergeElement",
    "feMergeNode" => "SVGFEMergeNodeElement",
    "feMorphology" => "SVGFEMorphologyElement",
    "feOffset" => "SVGFEOffsetElement",
    "fePointLight" => "SVGFEPointLightElement",
    "feSpecularLighting" => "SVGFESpecularLightingElement",
    "feSpotLight" => "SVGFESpotLightElement",
    "feTile" => "SVGFETileElement",
    "feTurbulence" => "SVGFETurbulenceElement",
    "filter" => "SVGFilterElement",
    "font" => "SVGElement",
    "font-face" => "SVGElement",
    "font-face-format" => "SVGElement",
    "font-face-name" => "SVGElement",
    "font-face-src" => "SVGElement",
    "font-face-uri" => "SVGElement",
    "foreignObject" => "SVGForeignObjectElement",
    "g" => "SVGGElement",
    "glyph" => "SVGElement",
    "glyphRef" => "SVGElement",
    "hatch" => "SVGElement",
    "hatchpath" => "SVGElement",
    "hkern" => "SVGElement",
    "image" => "SVGImageElement",
    "line" => "SVGLineElement",
    "linearGradient" => "SVGLinearGradientElement",
    "marker" => "SVGMarkerElement",
    "mask" => "SVGMaskElement",
    "mesh" => "SVGElement",
    "meshgradient" => "SVGElement",
    "meshpatch" => "SVGElement",
    "meshrow" => "SVGElement",
    "metadata" => "SVGMetadataElement",
    "missing-glyph" => "SVGElement",
    "mpath" => "SVGMPathElement",
    "path" => "SVGPathElement",
    "pattern" => "SVGPatternElement",
    "polygon" => "SVGPolygonElement",
    "polyline" => "SVGPolylineElement",
    "radialGradient" => "SVGRadialGradientElement",
    "rect" => "SVGRectElement",
    "set" => "SVGSetElement",
    "svg" => "SVGSVGElement",
    "solidcolor" => "SVGElement",
    "stop" => "SVGStopElement",
    "switch" => "SVGSwitchElement",
    "symbol" => "SVGSymbolElement",
    "text" => "SVGTextElement",
    "textPath" => "SVGTextPathElement",
    "title" => "SVGTitleElement",
    "tref" => "SVGElement",
    "tspan" => "SVGTSpanElement",
    "unknown" => "SVGElement",
    "use" => "SVGUseElement",
    "view" => "SVGViewElement",
    "vkern" => "SVGElement"
}


static MathmlTypes phf::Map<&'static str, &'static str> = phf_map! {
    "annotation" => "MathMLElement",
    "annotation-xml" => "MathMLElement",
    "maction" => "MathMLElement",
    "math" => "MathMLElement",
    "merror" => "MathMLElement",
    "mfrac" => "MathMLElement",
    "mi" => "MathMLElement",
    "mmultiscripts" => "MathMLElement",
    "mn" => "MathMLElement",
    "mo" => "MathMLElement",
    "mover" => "MathMLElement",
    "mpadded" => "MathMLElement",
    "mphantom" => "MathMLElement",
    "mprescripts" => "MathMLElement",
    "mroot" => "MathMLElement",
    "mrow" => "MathMLElement",
    "ms" => "MathMLElement",
    "mspace" => "MathMLElement",
    "msqrt" => "MathMLElement",
    "mstyle" => "MathMLElement",
    "msub" => "MathMLElement",
    "msubsup" => "MathMLElement",
    "msup" => "MathMLElement",
    "mtable" => "MathMLElement",
    "mtd" => "MathMLElement",
    "mtext" => "MathMLElement",
    "mtr" => "MathMLElement",
    "munder" => "MathMLElement",
    "munderover" => "MathMLElement",
    "none" => "MathMLElement",
    "semantics" => "MathMLelement"
}